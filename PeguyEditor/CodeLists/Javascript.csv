label:keywords:code
For loop:loop, for, block:"for (var i = 0; i < n; i++)
{
	// Do something
}"
Double for loop:loop, for, block:"for (var i = 0; i < n; i++)
{
	for (var j = 0; j < n; j++)
	{
		// Do something
	}
}"
While loop:loop, while, block:"var continueLoop = true;

while (continueLoop)
{
	// Do something
}"
If block:if, block:"var conditionOk = true;

if (conditionOk === true)
{
	// Do something
}"
Create function without parameters:function:"var myFunction = function()
{
	// Do something
}"
Create function with parameters:function:"var myFunction = function($param)
{
	// Do something
}"
Create regex:regex:"var myRegex = new RegExp(""[a-z]"");
var matchMyRegex = inputStr.match(myRegex);"
Ondrop event:drop, ondrop, files, events:"myNode.ondrop = function($event)
{
	// Do something
};

myNode.ondragover = preventDefault;"
Get dropped files:drop, ondrop, files:"var accept = ['text/html'];
var dropped = [];
var accepted = [];
var ready = [];

var onReady = function($callback)
{
	if (ready.length >= accepted.length)
		$callback(ready);
};

var loadFile = function($event, $callback)
{
	preventDefault($event);

	dropped = [];
	accepted = [];
	ready = [];

	var effectAllowed = $event.dataTransfer.effectAllowed;

	if (effectAllowed === ""all"")
	{
		dropped = $event.dataTransfer.files;
		
		for (var i = 0; i < dropped.length; i++)
		{
			if (accept.length <= 0 || accept.indexOf(dropped[i].type) >= 0)
				accepted.push(dropped[i]);
		}

		for (var i = 0; i < accepted.length; i++)
		{
			var file = accepted[i];

			var reader = new FileReader();
			reader.name = file.name;
			reader.type = file.type;
			reader.path = file.path;
			
			reader.onload = function ($event)
			{
				var fileData = $event.target.result;
				var fileName = this.name;
				var fileType = this.type;
				var filePath = this.path;
				
				ready.push({ name: fileName, path: filePath, type: fileType, data: fileData });
				onReady($callback);
			};
			
			if (/^image/.test(file.type) || /^application\/pdf/.test(file.type))
				reader.readAsDataURL(file);
			else if (/^text/.test(file.type) || file.type === 'application/json')
				reader.readAsText(file);
		}
	}
};"
Get scroll position:events, scroll:"var scrollX = element.scrollLeft;
var scrollY = element.scrollTop;"
Get scroll size:events, scroll:"var scrollWidth = element.scrollWidth;
var scrollHeight = element.scrollHeight;"
Force scroll position:events, scroll:"if (element.scrollTo !== undefined && element.scrollTo !== null)
	element.scrollTo(scrollX, scrollY);
else
{
	element.scrollLeft = scrollX;
	element.scrollTop = scrollY;
}"
To clipboard:clipboard:"if (!navigator.clipboard)
{
	var textArea = document.createElement(""textarea"");
	textArea.value = ""Hello world !"";
	
	textArea.style.top = ""-1000000000px"";
	textArea.style.left = ""-1000000000px"";
	textArea.style.width = ""100px"";
	textArea.style.height = ""100px"";
	textArea.style.position = ""absolute"";
	
	document.body.appendChild(textArea);
	textArea.focus();
	textArea.select();
	
	try
	{
		var successful = document.execCommand(""copy"");
		
		if (successful)
		{
			// Something to do...
		} 
		else
		{
			// Something to do...
		} 
	}
	catch ($error) 
	{
		// Something to do...
	} 
	
	document.body.removeChild(textArea);
}
else
{
	navigator.clipboard.writeText(""Hello world !"").then(function()
	{
		// Something to do...
	}, 
	function($error) 
	{
		// Something to do...
	});
}"
Create timer:timer, animation:var timer = setInterval(function() { /* Do something */ }, 20);
Stop timer:timer, animation:clearTimeout(timer);
